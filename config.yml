upstream:
  # these external DNS resolvers will be used. Blocky picks 2 random resolvers from the list for each query
  # format for resolver: [net:]host:[port][/path]. net could be empty (default, shortcut for tcp+udp), tcp+udp, tcp, udp, tcp-tls or https (DoH). If port is empty, default port will be used (53 for udp and tcp, 853 for tcp-tls, 443 for https (Doh))
  externalResolvers:
    # - 46.182.19.48
    # - 80.241.218.68
    # - tcp-tls:fdns1.dismail.de:853
    - https://dns.digitale-gesellschaft.ch/dns-query
    - https://dns-unfiltered.adguard.com/dns-query
    - https://dns.quad9.net/dns-query
# optional: custom IP address for domain name (with all sub-domains)
# example: query "printer.lan" or "my.printer.lan" will return 192.168.178.3
#customDNS:
#  mapping:
#    printer.lan: 192.168.178.3
# optional: definition, which DNS resolver(s) should be used for queries to the domain (with all sub-domains). Multiple resolvers must be separated by comma
# Example: Query client.fritz.box will ask DNS server 192.168.178.1. This is necessary for local network, to resolve clients by host name
conditional:
  mapping:
    fritz.box: udp:192.169.178.1
    lan.net: udp:192.169.178.1,udp:192.169.178.2
# optional: use black and white lists to block queries (for example ads, trackers, adult pages etc.)
   

blocking:
  # definition of blacklist groups. Can be external link (http/https) or local file
  blackLists:
    ads:
      - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
      - https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
      - https://mirror1.malwaredomains.com/files/justdomains
      - http://sysctl.org/cameleon/hosts
      - https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist
      - https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
      - https://adaway.org/hosts.txt
      - https://v.firebog.net/hosts/AdguardDNS.txt
      - https://v.firebog.net/hosts/Admiral.txt
      - https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt
      - https://v.firebog.net/hosts/Easylist.txt
      - https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext
      - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts
      - https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts
      - https://raw.githubusercontent.com/jdlingyu/ad-wars/master/hosts
      - https://raw.githubusercontent.com/w13d/adblockListABP-PiHole/master/Spotify.txt
      - https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardMobileAds.txt
      - https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardMobileSpyware.txt
      - https://raw.githubusercontent.com/anudeepND/youtubeadsblacklist/master/domainlist.txt
    youtube:
      - https://raw.githubusercontent.com/kboghdady/youTube_ads_4_pi-hole/master/youtubelist.txt
    telemetry:
      - https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/samsung
      - https://www.technoy.de/lists/Session-Replay.txt
      - https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/Win10Telemetry
      - https://v.firebog.net/hosts/Easyprivacy.txt
      - https://v.firebog.net/hosts/Prigent-Ads.txt
      - https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt
      - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.2o7Net/hosts
      - https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt
      - https://hostfiles.frogeye.fr/firstparty-trackers-hosts.txt
      - https://hostfiles.frogeye.fr/multiparty-trackers-hosts.txt
      - https://www.github.developerdan.com/hosts/lists/ads-and-tracking-extended.txt
      - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/android-tracking.txt
      - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV.txt
      - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/AmazonFireTV.txt
    danger:
      - https://www.technoy.de/lists/malware2.txt
      - https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/malware
      - https://raw.githubusercontent.com/hectorm/hmirror/master/data/disconnect.me-malvertising/list.txt
      - https://raw.githubusercontent.com/hectorm/hmirror/master/data/disconnect.me-malware/list.txt
      - https://raw.githubusercontent.com/hectorm/hmirror/master/data/malwaredomainlist.com/list.txt
      - https://raw.githubusercontent.com/hectorm/hmirror/master/data/malwaredomains.com-immortaldomains/list.txt
      - https://raw.githubusercontent.com/hectorm/hmirror/master/data/malwaredomains.com-justdomains/list.txt
      - https://raw.githubusercontent.com/hectorm/hmirror/master/data/ransomwaretracker.abuse.ch/list.txt
      - https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt
      - https://raw.githubusercontent.com/hectorm/hmirror/master/data/malwaredomains.com-immortaldomains/list.txt
      - https://raw.githubusercontent.com/blocklistproject/Lists/master/malware.txt
      - https://raw.githubusercontent.com/blocklistproject/Lists/master/ransomware.txt
      - https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/Fake-Science
      - https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/spam.mails
      - https://www.github.developerdan.com/hosts/lists/hate-and-junk-extended.txt
    crypto:
      - https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/crypto
      - https://zerodot1.gitlab.io/CoinBlockerLists/list.txt
      - https://zerodot1.gitlab.io/CoinBlockerLists/list_browser.txt
      - https://zerodot1.gitlab.io/CoinBlockerLists/list_optional.txt
      - https://raw.githubusercontent.com/Akamaru/Pi-Hole-Lists/master/cryptomine.txt
    special:
      - https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews/hosts

  # definition of whitelist groups. Attention: if the same group has black and whitelists, whitelists will be used to disable particular blacklist entries. If a group has only whitelist entries -> this means only domains from this list are allowed, all other domains will be blocked
  #whiteLists:
  #  ads:
  #    - whitelist.txt
  # definition: which groups should be applied for which client
  clientGroupsBlock:
    # default will be used, if no special definition for a client name exists
    default:
      - ads
      - telemetry
      - danger
      - crypto
      - youtube
      - special
 
    # use client name (with wildcard support: * - sequence of any characters, [0-9] - range)
    # or single ip address / client subnet as CIDR notation
    bene*:
      - special
    # 192.168.178.1/24:
    #   - special
  # which response will be sent, if query is blocked:
  # zeroIp: 0.0.0.0 will be returned (default)
  # nxDomain: return NXDOMAIN as return code
  # comma separated list of destination IP adresses (for example: 192.100.100.15, 2001:0db8:85a3:08d3:1319:8a2e:0370:7344). Should contain ipv4 and ipv6 to cover all query types. Useful with running web server on this address to display the "blocked" page.
  blockType: zeroIp
  # optional: automatically list refresh period in minutes. Default: 4h.
  # Negative value -> deactivate automatically refresh.
  # 0 value -> use default
  refreshPeriod: 0
# optional: configuration for caching of DNS responses
caching:
  # amount in minutes, how long a response must be cached (min value).
  # If <=0, use response's TTL, if >0 use this value, if TTL is smaller
  # Default: 0
  minTime: 0
  # amount in minutes, how long a response must be cached (max value).
  # If <0, do not cache responses
  # If 0, use TTL
  # If > 0, use this value, if TTL is greater
  # Default: 0
  maxTime: 0
  # if true, will preload DNS results for often used queries (names queried more than 5 times in a 2 hour time window)
  # this improves the response time for often used queries, but significantly increases external traffic
  # default: false
  prefetching: true
# optional: configuration of client name resolution
#clientLookup:
# optional: this DNS resolver will be used to perform reverse DNS lookup (typically local router)
#  upstream: udp:192.168.178.1
# optional: some routers return multiple names for client (host name and user defined name). Define which single name should be used.
# Example: take second name if present, if not take first name
#  singleNameOrder:
#    - 2
#    - 1
# optional: custom mapping of client name to IP addresses. Useful if reverse DNS does not work properly or just to have custom client names.
#  clients:
#    laptop:
#      - 192.168.178.29
# optional: configuration for prometheus metrics endpoint
prometheus:
#   # enabled if true
  enable: true
#   # url path, optional (default '/metrics')
#   path: /metrics
# optional: write query information (question, answer, client, duration etc) to daily csv file
# queryLog:
#   # directory (should be mounted as volume in docker)
#   dir: /logs
#   # if true, write one file per client. Writes all queries to single file otherwise
#   perClient: true
#   # if > 0, deletes log files which are older than ... days
#   logRetentionDays: 7

queryLog:
  #   # directory (should be mounted as volume in docker)
  #   dir: /logs
  #   # if true, write one file per client. Writes all queries to single file otherwise
  #   perClient: true
  #   # if > 0, deletes log files which are older than ... days
  type: mysql
  target: user:my-secret-pw@tcp(db:3306)/user?charset=utf8mb4&parseTime=True&loc=Local
  logRetentionDays: 7

# optional: DNS listener port and bind ip address, default 53 (UDP and TCP). Example: 53, :53, 127.0.0.1:53
port: 53
# optional: HTTP listener port, default 0 = no http listener. If > 0, will be used for prometheus metrics, pprof, REST API, DoH ...
httpPort: 4000
# optional: HTTPS listener port, default 0 = no http listener. If > 0, will be used for prometheus metrics, pprof, REST API, DoH...
#httpsPort: 443
# mandatory, if https port > 0: path to cert and key file for SSL encryption
#httpsCertFile: server.crt
#httpsKeyFile: server.key
# optional: use this DNS server to resolve blacklist urls and upstream DNS servers (DOH). Useful if no DNS resolver is configured and blocky needs to resolve a host name. Format net:IP:port, net must be udp or tcp
bootstrapDns: tcp:1.1.1.1
# optional: Log level (one from debug, info, warn, error). Default: info
logLevel: info
# optional: Log format (text or json). Default: text
logFormat: text
